{
  "permissions": {
    "allow": [
      "Read(/mnt/c/Users/erik/OneDrive/**)",
      "Bash(cd:*)",
      "Read(/mnt/c/Users/erik/OneDrive/**)",
      "Read(/mnt/c/Users/erik/OneDrive/**)",
      "Bash(cd:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Read(/mnt/c/Users/erik/Downloads/**)",
      "WebFetch(domain:caspio-pricing-proxy-ab30a049961a.herokuapp.com)",
      "Bash(grep:*)",
      "Read(/mnt/c/Users/erik/Downloads/**)",
      "Read(/mnt/c/Users/erik/Downloads/**)",
      "Read(/mnt/c/Users/erik/Downloads/**)",
      "Read(/mnt/c/Users/erik/Downloads/**)",
      "Read(/mnt/c/Users/erik/Downloads/**)",
      "Read(/mnt/c/Users/erik/OneDrive/**)",
      "Bash(curl:*)",
      "Read(/mnt/c/Users/erik/Downloads/**)",
      "Read(/mnt/c/Users/erik/Downloads/**)",
      "Read(/mnt/c/Users/erik/Downloads/**)",
      "Read(/mnt/c/Users/erik/Downloads/**)",
      "Bash(python:*)",
      "Read(/mnt/c/Users/erik/OneDrive/**)",
      "Read(/mnt/c/Users/erik/Downloads/**)",
      "Read(/mnt/c/Users/erik/Downloads/**)",
      "Read(/mnt/c/Users/erik/Downloads/**)",
      "Read(/mnt/c/Users/erik/Downloads/**)",
      "Read(/mnt/c/Users/erik/Downloads/**)",
      "Read(/mnt/c/Users/erik/Downloads/**)",
      "Read(/mnt/c/Users/erik/Downloads/**)",
      "Read(/mnt/c/Users/erik/Downloads/**)",
      "Read(/mnt/c/Users/erik/Downloads/**)",
      "Read(/mnt/c/Users/erik/Downloads/**)",
      "Read(/mnt/c/Users/erik/Downloads/**)",
      "Read(/mnt/c/Users/erik/Downloads/**)",
      "Read(/mnt/c/Users/erik/Downloads/**)",
      "Read(/mnt/c/Users/erik/OneDrive/**)",
      "Read(/mnt/c/Users/erik/Downloads/**)",
      "Read(/mnt/c/Users/erik/Downloads/**)",
      "Read(/mnt/c/Users/erik/Downloads/**)",
      "Read(/mnt/c/Users/erik/Downloads/**)",
      "Read(/mnt/c/Users/erik/Downloads/**)",
      "Read(/mnt/c/Users/erik/Downloads/**)",
      "Read(/mnt/c/Users/erik/Downloads/**)",
      "Bash(git push:*)",
      "Read(//mnt/c/Users/erik/Downloads/**)",
      "Bash(echo:*)",
      "Read(//mnt/c/Users/erik/OneDrive/**)",
      "Bash(node:*)",
      "WebSearch",
      "WebFetch(domain:screenprintdirect.com)",
      "WebFetch(domain:www.printrenegades.com)",
      "Bash(npm start)",
      "Bash(for file in \"quote-builder-base.js\" \"quote-formatter.js\")",
      "Bash(do echo \"Testing /shared_components/js/$file:\")",
      "Bash(done)",
      "Bash(for file in \"quote-builder-common.css\" \"quote-print.css\")",
      "Bash(do echo \"Testing /shared_components/css/$file:\")",
      "Bash(chmod:*)",
      "Bash(/tmp/test-all-persistence.sh:*)",
      "Bash(/tmp/test-phase3-features.sh:*)",
      "Bash(bash:*)",
      "WebFetch(domain:cdnjs.cloudflare.com)",
      "WebFetch(domain:fontawesome.com)",
      "WebFetch(domain:cdnjs.com)",
      "Bash(sed:*)",
      "Bash(sudo apt-get:*)",
      "Bash(sudo apt-get install:*)",
      "Bash(dpkg:*)",
      "Read(//tmp/**)",
      "Bash(claude mcp add:*)",
      "Read(//home/erik/**)",
      "Bash(sh)",
      "Bash(uvx:*)",
      "Bash(cat:*)",
      "Bash(claude mcp:*)",
      "Bash(apt list:*)",
      "Bash(timeout 30 uvx:*)",
      "Bash(pip install:*)",
      "Bash(timeout:*)",
      "Bash(ffmpeg:*)",
      "mcp__uvx__check_audio_dependencies",
      "mcp__uvx__check_audio_devices",
      "Bash(pactl:*)",
      "mcp__uvx__converse",
      "Bash(pip3 install:*)",
      "mcp__uvx__service",
      "mcp__uvx__livekit_install",
      "mcp__uvx__voice_status",
      "Bash(parecord:*)",
      "Bash(paplay:*)",
      "mcp__uvx__whisper_install",
      "Bash([ -n \"$OPENAI_API_KEY\" ])",
      "mcp__uvx__config_reload",
      "mcp__uvx__update_config",
      "Bash(source ~/.bashrc)",
      "mcp__uvx__kokoro_install",
      "mcp__uvx__voice_mode_info",
      "Bash(wsl.exe:*)",
      "WebFetch(domain:www.sanmar.com)",
      "Bash(awk:*)",
      "Bash(python3:*)",
      "Bash(for id in 810 811 812 813 814)",
      "Bash(do)",
      "Bash(git merge:*)",
      "Bash(git stash:*)",
      "Bash(git branch:*)",
      "Bash(sudo rm:*)",
      "Bash(powershell.exe:*)",
      "Bash(npm install)",
      "Bash(npm cache clean:*)",
      "Bash(npm install:*)",
      "Bash(git restore:*)",
      "Bash(git reset:*)",
      "Bash([ -d tests ])",
      "Bash(for file in c112-bogo-promo.js dp5-helper.js cart-price-recalculator.js)",
      "Bash(do echo \"=== Checking $file ===\")",
      "Bash(for file in inventory-details.html policies-hub.html resources.html sale.html webstore-info.html top-sellers-showcase.html)",
      "Bash(do echo \"=== $file ===\")",
      "Read(///**)",
      "Bash(find:*)",
      "Bash(for style in PC61 PC450 PC55)",
      "Bash(do echo \"=== $style ===\")",
      "Bash(for style in PC54 PC61 PC450)",
      "Bash(do echo \"=== Checking $style ===\")",
      "Bash(lsof:*)",
      "Bash(kill:*)",
      "Bash(pkill:*)",
      "Bash(git log:*)",
      "Bash(cp:*)",
      "WebFetch(domain:www.raygunprinting.com)",
      "WebFetch(domain:www.screenprinting.com)",
      "WebFetch(domain:tannersinc.net)",
      "Bash(git checkout:*)",
      "Read(//c/Users/erik/Downloads/**)",
      "Bash(heroku apps:*)",
      "Bash(heroku certs:auto:*)",
      "Bash(nslookup:*)",
      "Bash(whois:*)",
      "Bash(heroku domains:*)",
      "Bash(dig:*)",
      "Bash(heroku certs:auto:refresh:*)",
      "Bash(openssl s_client:*)",
      "Bash(openssl x509:*)",
      "Read(//c/**)",
      "Bash(git mv:*)",
      "Bash(for:*)",
      "Bash(if [ -f \"$file\" ])",
      "Bash(then)",
      "Bash(if git ls-files --error-unmatch \"$file\")",
      "Bash(/dev/null)",
      "Bash(else)",
      "Bash(fi)",
      "Skill(christmas-bundle-orders)",
      "Bash(do echo \"Testing: $url\")",
      "Bash(time curl:*)",
      "Bash(do echo -e \"\\n$brand:\")",
      "Bash(do echo -e \"\\nAttempt $i (sleeping 5s to clear cache):\")",
      "Bash(TOKEN=\"eyJraWQiOiJNSytuQ3VDK3lkQ0lBbit2ejFkZ0hPVGY2RFptbk1LQlkrcnZMdHQ1VHhFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI2YzE0ZGY1OC0yZTkxLTRhZTItOGRmMS04M2E5YzljYjM3N2MiLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiaXNzIjoiaHR0cHM6XC9cL2NvZ25pdG8taWRwLnVzLWVhc3QtMS5hbWF6b25hd3MuY29tXC91cy1lYXN0LTFfQTNORTc4RmhGIiwiY29nbml0bzp1c2VybmFtZSI6IjZjMTRkZjU4LTJlOTEtNGFlMi04ZGYxLTgzYTljOWNiMzc3YyIsImN1c3RvbTpjdXN0b21lcl9pbnRlcm5hbF9pZCI6IjQ3IiwiYXVkIjoibjhuMnV2bXZxdWNsOHJjMm9lcDBmcnM0ZyIsImV2ZW50X2lkIjoiZjdiNWUwNDctMjUyMS00OTRhLWFmYzAtNDM2MGJlZDE0YTE2IiwidG9rZW5fdXNlIjoiaWQiLCJhdXRoX3RpbWUiOjE3NjE0ODk3NjcsImV4cCI6MTc2MTQ5MzM2NywiY3VzdG9tOnVzZXJfdHlwZSI6InVzZXIiLCJpYXQiOjE3NjE0ODk3NjcsImVtYWlsIjoiRXJpa0Bud2N1c3RvbWFwcGFyZWwuY29tIn0.bBB-grQ234qICGRSRp6mQUPyzmkjOM_17Q1ls7VcY-q8EDxir6GHKS7u0Qs9fZ011qKHWR2rdAxs_8RWb65ENVZXLtg0R4KRIo4sVlcsnDank7holGkcI1CTxKisdhShAG7r-fgOGCAlrYgl0uHm3LfBOlJJYroarFYlGxEIwcN4mMkzKh7S8E15p8z2nuJvxLhId8OAuuOcG3a1MQvcby-8dzGwU6nxmAVQh9EvK0zHbGxIKu4agwtWm9W8s2j7-5VR-vuCo2wOWCQWFTBB6UApR8NdSJWM3DLG7_BvajfavsWwfzoaXsebNiLM-J1HLDeF61hBiVpD_19f-qPG6g\")",
      "Bash(ls:*)"
    ],
    "deny": [],
    "ask": [],
    "defaultMode": "acceptEdits",
    "additionalDirectories": [
      "/home/erik/.claude"
    ]
  }
}
